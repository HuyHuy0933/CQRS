// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.Infra.Persistent;

namespace SalaryCalculator.Infra.Persistent.Migrations
{
    [DbContext(typeof(SalaryCalculatorDbContext))]
    [Migration("20210119103623_addMoreForeignInsuranceRateCols")]
    partial class addMoreForeignInsuranceRateCols
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.EncryptedEmpMonthlyEnteredRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EncryptedRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedYearMonth")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StandardWorkingDays")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EncryptedYearMonth")
                        .IsUnique()
                        .HasFilter("[EncryptedYearMonth] IS NOT NULL");

                    b.ToTable("EncryptedEmpMonthlyEnteredRecords");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.EncryptedEmpMonthlySalary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EncryptedRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EncryptedSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EncryptedRecordId")
                        .IsUnique();

                    b.ToTable("EncryptedEmpMonthlySalaries");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.ProgressiveTaxRateSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LowerBound")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxRateLevel")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UpperBound")
                        .HasColumnType("decimal(34,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ProgressiveTaxRateSettings");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.SalaryCurrency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalaryCurrencies");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.SalarySetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CoefficientSocialCare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommonMinimumWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DefaultProbationTaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DependantDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployeeHealthCareInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployeeSocialInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployeeUnemploymentInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployeeUnionFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployerHealthCareInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployerSocialInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployerUnemploymentInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EmployerUnionFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployeeHealthCareInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployeeSocialInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployeeUnemploymentInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployerHealthCareInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployerSocialInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ForeignEmployerUnemploymentInsuranceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InsurancePaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInsurancePaidFullSalary")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumUnionFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinimumNonWorkingDay")
                        .HasColumnType("int");

                    b.Property<decimal>("PersonalDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RegionalMinimumWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("SalarySettings");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.SyncEmployeeProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DependantEndDates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InUnion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SyncEmployeeProfiles");
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.EncryptedEmpMonthlySalary", b =>
                {
                    b.HasOne("SalaryCalculator.Infra.Persistent.Entities.EncryptedEmpMonthlyEnteredRecord", "EncryptedEmpMonthlyEnteredRecord")
                        .WithOne("EncryptedEmpMonthlySalary")
                        .HasForeignKey("SalaryCalculator.Infra.Persistent.Entities.EncryptedEmpMonthlySalary", "EncryptedRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.ProgressiveTaxRateSetting", b =>
                {
                    b.HasOne("SalaryCalculator.Infra.Persistent.Entities.SalaryCurrency", "SalaryCurrency")
                        .WithMany("ProgressiveTaxRateSettings")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalaryCalculator.Infra.Persistent.Entities.SalarySetting", b =>
                {
                    b.HasOne("SalaryCalculator.Infra.Persistent.Entities.SalaryCurrency", "SalaryCurrency")
                        .WithMany("SalarySettings")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
